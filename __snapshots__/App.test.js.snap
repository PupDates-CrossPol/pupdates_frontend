// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={false}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    style={
      Object {
        "backgroundColor": "#eee",
        "flex": 1,
        "flexDirection": "column-reverse",
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="auto"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "paddingTop": 64,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          style={
            Object {
              "backgroundColor": "#fff",
              "flex": 1,
            }
          }
        >
          <RCTSafeAreaView
            emulateUnlessSupported={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fff",
                "flex": 1,
                "marginTop": 90,
              }
            }
          >
            <RCTScrollView
              style={
                Object {
                  "paddingVertical": 20,
                }
              }
            >
              <View>
                <Image
                  source={1}
                  style={
                    Object {
                      "height": 140,
                      "width": 140,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "fontSize": 50,
                    }
                  }
                >
                  PupDates
                </Text>
                <TextInput
                  allowFontScaling={true}
                  autoCapitalize="none"
                  onChangeText={[Function]}
                  placeholder="Email"
                  rejectResponderTermination={true}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "lightgrey",
                      "borderRadius": 50,
                      "borderWidth": 1.5,
                      "height": 60,
                      "margin": 20,
                      "padding": 10,
                      "width": "90%",
                    }
                  }
                  underlineColorAndroid="transparent"
                  value=""
                />
                <TextInput
                  allowFontScaling={true}
                  autoCapitalize="none"
                  onChangeText={[Function]}
                  placeholder="Password"
                  rejectResponderTermination={true}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "lightgrey",
                      "borderRadius": 50,
                      "borderWidth": 1.5,
                      "height": 60,
                      "margin": 20,
                      "padding": 10,
                      "width": "90%",
                    }
                  }
                  underlineColorAndroid="transparent"
                  value=""
                />
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderBottomLeftRadius": 20,
                      "borderBottomRightRadius": 20,
                      "borderTopLeftRadius": 20,
                      "borderTopRightRadius": 20,
                      "color": "black",
                      "justifyContent": "center",
                      "opacity": 1,
                    }
                  }
                >
                  <ViewManagerAdapter_ExpoLinearGradient
                    proxiedProperties={
                      Object {
                        "colors": Array [
                          4294944000,
                          4290979109,
                        ],
                        "endPoint": undefined,
                        "locations": undefined,
                        "startPoint": undefined,
                      }
                    }
                    style={
                      Object {
                        "alignItems": "center",
                        "borderRadius": 25,
                        "height": 50,
                        "justifyContent": "center",
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#fff",
                          "fontSize": 25,
                        }
                      }
                    >
                      Login
                    </Text>
                  </ViewManagerAdapter_ExpoLinearGradient>
                </View>
              </View>
            </RCTScrollView>
          </RCTSafeAreaView>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#fff",
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <View
          onLayout={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "backgroundColor": "#fff",
              "borderBottomColor": "#a7a7aa",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "flexDirection": "row",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "left": 0,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <Text
                  accessibilityTraits="header"
                  allowFontScaling={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 0.9)",
                      "fontSize": 17,
                      "fontWeight": "600",
                      "marginHorizontal": 16,
                      "textAlign": "center",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
